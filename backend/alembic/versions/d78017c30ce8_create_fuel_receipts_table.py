"""create fuel receipts table & change tank capacity from an int to a float

Revision ID: d78017c30ce8
Revises: ce89955bf56f
Create Date: 2025-07-03 12:08:44.945845

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd78017c30ce8'
down_revision: Union[str, Sequence[str], None] = 'ce89955bf56f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fuel_receipts',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('amount_paid', sa.Numeric(), nullable=False),
    sa.Column('volume_purchased', sa.Numeric(), nullable=False),
    sa.Column('advertised_price', sa.Numeric(), nullable=False),
    sa.Column('odometer', sa.Numeric(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('car_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['car_id'], ['cars.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.alter_column('cars', 'tank_capacity',
               existing_type=sa.INTEGER(),
               type_=sa.Numeric(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('cars', 'tank_capacity',
               existing_type=sa.Numeric(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.drop_table('fuel_receipts')
    # ### end Alembic commands ###
